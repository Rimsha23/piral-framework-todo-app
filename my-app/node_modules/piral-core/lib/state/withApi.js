"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withApi = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const components_1 = require("../components");
const utils_1 = require("../utils");
const DefaultWrapper = (props) => (0, utils_1.defaultRender)(props.children);
function getWrapper(wrappers, wrapperType) {
    const WrapAll = wrappers['*'];
    const WrapType = wrappers[wrapperType];
    if (WrapAll && WrapType) {
        return (props) => (React.createElement(WrapAll, { ...props },
            React.createElement(WrapType, { ...props })));
    }
    return WrapType || WrapAll || DefaultWrapper;
}
function makeWrapper(context, outerProps, wrapperType, errorType) {
    const wrapped = context.readState((m) => m.app.wrap);
    const OuterWrapper = context.readState((m) => getWrapper(m.registry.wrappers, wrapperType));
    const Wrapper = (props) => (React.createElement(OuterWrapper, { ...outerProps, ...props },
        React.createElement(components_1.ErrorBoundary, { ...outerProps, ...props, errorType: errorType }, props.children)));
    return wrapped
        ? (props) => (React.createElement("piral-component", { origin: outerProps.piral.meta.name },
            React.createElement(Wrapper, { ...props })))
        : Wrapper;
}
function withApi(context, component, piral, errorType, wrapperType = errorType, captured = {}) {
    const outerProps = { ...captured, piral };
    const converters = context.converters;
    const Wrapper = makeWrapper(context, outerProps, wrapperType, errorType);
    return (0, components_1.wrapComponent)(converters, component, outerProps, Wrapper);
}
exports.withApi = withApi;
//# sourceMappingURL=withApi.js.map